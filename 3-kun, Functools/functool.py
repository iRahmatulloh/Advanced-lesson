from functools import singledispatch, wraps@singledispatchdef mult_five(x):    return x * 5@mult_five.register(str)def _(x : str) -> str:    return x * 5@mult_five.register(int)def _(x : int) -> int:    return x * 5@mult_five.register(tuple)def _(x : tuple) -> tuple:    return tuple(map(lambda x: x * 5, list(x)))## print(mult_five(5))# print(mult_five('helllo '))# print(mult_five([1,2,3,4,5]))def twice(func):    @wraps(func)    def wrapper(*args, **kwargs):        func()        func()    return wrapperdef hello():    print('Hello dunya!')hello_twice = twice(hello)print(hello_twice)